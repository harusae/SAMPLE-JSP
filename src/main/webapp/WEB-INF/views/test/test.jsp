<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<!doctype html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta name="viewport"
        content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Document</title>

</head>
<body>

<p>count : ${count}</p>
  <button onclick="onBtnExport()">Download CSV export file</button>
  <div id="grid1"></div>
  <div style="float:left;">
    <div style="width:400px; height:600px; border:1px solid black; float:left;">
      <p>test1</p>
      <canvas id="test1" style="display: block; box-sizing: border-box;"></canvas>
    </div>
    <div style="width:400px; height:600px; border:1px solid black; float:left;">
      <p>test2</p>
      <canvas id="test2" style="display: block; box-sizing: border-box;"></canvas>
    </div>
  </div>
  <div style="float:left;">
    <div style="width:400px; height:500px; border:1px solid black; float:left">
      <p>test3</p>
      <canvas id="test3" style="display: block; box-sizing: border-box;"></canvas>
    </div>
    <div style="width:400px; height:500px; border:1px solid black; float:left">
      <p>test4</p>
      <canvas id="test4" style="display: block; box-sizing: border-box;"></canvas>
    </div>
  </div>


  <div style="float:left;">
    <div id="treeview" style="width:400px; height:300px; border:1px solid black; float:left"/>
  </div>


</body>

<!-- script for chart/grid (오브젝트 아래위치에서 작성해야 동작) -->
<script>

  let dataTest = [
    ["존", "john@example.com", "(353) 01 222 3333"],
    ["마크", "mark@gmail.com", "(01) 22 888 4444"],
    ["에인", "eoin@gmail.com", "0097 22 654 00033"],
    ["쎄러", "sarahcdd@gmail.com", "+322 876 1233"],
    ["앺신", "afshin@mail.com", "(353) 22 87 8356"],
    ["존2", "john@example.com", "(353) 01 222 3333"],
    ["마크2", "mark@gmail.com", "(01) 22 888 4444"],
    ["에인2", "eoin@gmail.com", "0097 22 654 00033"],
    ["쎄러2", "sarahcdd@gmail.com", "+322 876 1233"],
    ["앺신2", "afshin@mail.com", "(353) 22 87 8356"],
    ["존3", "john@example.com", "(353) 01 222 3333"],
    ["마크3", "mark@gmail.com", "(01) 22 888 4444"],
    ["에인3", "eoin@gmail.com", "0097 22 654 00033"],
    ["쎄러3", "sarahcdd@gmail.com", "+322 876 1233"],
    ["앺신3", "afshin@mail.com", "(353) 22 87 8356"]
  ];

  function onBtnExport() {

    let wb = new ExcelJS.Workbook();
    let workbookName = "Sample Workbook Generated by ExcelJS.xlsx";
    let worksheetName = "Demo Worksheet";
    let ws = wb.addWorksheet(worksheetName,
            {
              properties: {
                tabColor: {argb:'FFFF0000'}
              }
            }
    );
    ws.columns = [
      {
        key: "이름 ",
        header: "이름",
        width: 20
      },
      {
        key: "이메일",
        header: "이메일",
        width: 15,
        style: { numFmt: '"£"#,##0.00;[Red]-"£"#,##0.00' }
      },
      {
        key: "연락처",
        header: "연락처",
        width: 30,
        outlineLevel: 1 ,
        hidden: false
      },
    ];
    ws.addRows(dataTest);
    wb.xlsx.writeBuffer()
            .then(function(buffer) {
              saveAs(
                      new Blob([buffer], { type: "application/octet-stream" }),
                      workbookName
              );
            });

  }


  const gridTest = new gridjs.Grid({
    columns: ["Name", "Email", "Phone Number"],
    data: dataTest,
    pagination: {
      limit: 3
    },
    resizable: true,
    search: true,
    sort: true
  }).render(document.getElementById("grid1"));


  // 차트를 그럴 영역을 dom요소로 가져온다.
  var chartArea1 = document.getElementById('test1').getContext('2d');
  // 차트를 생성한다.
  var testChart1 = new Chart(chartArea1, {
    // ①차트의 종류(String)
    //type: 'bar',
    type: 'doughnut',
    // ②차트의 데이터(Object)
    data: {
      // ③x축에 들어갈 이름들(Array)
      labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
      // ④실제 차트에 표시할 데이터들(Array), dataset객체들을 담고 있다.
      datasets: [{
        // ⑤dataset의 이름(String)
        label: 'test1',
        // ⑥dataset값(Array)
        data: [12, 19, 3, 5, 2, 3],
        // ⑦dataset의 배경색(rgba값을 String으로 표현)
        backgroundColor: [
          //색상
          'rgba(255, 99, 132, 0.5)',
          'rgba(54, 162, 235, 0.5)',
          'rgba(255, 206, 86, 0.5)',
          'rgba(75, 192, 192, 0.5)',
          'rgba(153, 102, 255, 0.5)',
          'rgba(255, 159, 64, 0.5)'
        ],
        // ⑧dataset의 선 색(rgba값을 String으로 표현)
        //borderColor: 'rgba(255, 99, 132, 1)',
        // ⑨dataset의 선 두께(Number)
        borderWidth: 1
      }]
    },
    // ⑩차트의 설정(Object)
    options: {
      responsive: true,
      //미입력시 X축이 default
      plugins: {
        legend: {
          //미입력 시 top이 default
          position: 'bottom',
        },
        // 미입력시 검은색이 default
        datalabels: {
          color: '#FE777B'
        }
      }
    },
    plugins: [ChartDataLabels]
  });

  // 차트를 그럴 영역을 dom요소로 가져온다.
  var chartArea2 = document.getElementById('test2').getContext('2d');
  // 차트를 생성한다.
  var testChart2 = new Chart(chartArea2, {
    // ①차트의 종류(String)
    type: 'bar',
    // ②차트의 데이터(Object)
    data: {
      // ③x축에 들어갈 이름들(Array)
      labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
      // ④실제 차트에 표시할 데이터들(Array), dataset객체들을 담고 있다.
      datasets: [{
        // ⑤dataset의 이름(String)
        label: 'test2',
        // ⑥dataset값(Array)
        data: [12, 19, 3, 5, 2, 3],
        // ⑦dataset의 배경색(rgba값을 String으로 표현)
        backgroundColor: [
          //색상
          'rgba(255, 99, 132, 0.2)',
          'rgba(54, 162, 235, 0.2)',
          'rgba(255, 206, 86, 0.2)',
          'rgba(75, 192, 192, 0.2)',
          'rgba(153, 102, 255, 0.2)',
          'rgba(255, 159, 64, 0.2)'
        ],
        // ⑧dataset의 선 색(rgba값을 String으로 표현)
        //borderColor: 'rgba(255, 99, 132, 1)',
        // ⑨dataset의 선 두께(Number)
        borderWidth: 1
      }]
    },
    // ⑩차트의 설정(Object)
    options: {
      responsive: true,
      //미입력시 X축이 default
      //indexAxis: 'y',
      plugins: {
        legend: {
          //미입력 시 top이 default
          position: 'bottom',
        },
        // 미입력시 검은색이 default
        datalabels: {
          color: '#FE777B'
        }
      }
    },
    plugins: [ChartDataLabels]
  });


  // 차트를 그럴 영역을 dom요소로 가져온다.
  var chartArea3 = document.getElementById('test3').getContext('2d');
  // 차트를 생성한다.
  var testChart3 = new Chart(chartArea3, {
    // ①차트의 종류(String)
    type: 'bar',
    // ②차트의 데이터(Object)
    data: {
      // ③x축에 들어갈 이름들(Array)
      labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
      // ④실제 차트에 표시할 데이터들(Array), dataset객체들을 담고 있다.
      datasets: [
        {
          // ⑤dataset의 이름(String)
          label: 'test3a',
          // ⑥dataset값(Array)
          data: [12, 19, 3, 5, 2, 3],
          // ⑦dataset의 배경색(rgba값을 String으로 표현)
          backgroundColor: [
            //색상
            'rgba(255, 99, 132, 0.2)',
          ],
          // ⑧dataset의 선 색(rgba값을 String으로 표현)
          //borderColor: 'rgba(255, 99, 132, 1)',
          // ⑨dataset의 선 두께(Number)
          borderWidth: 1
        },
        {
          // ⑤dataset의 이름(String)
          label: 'test3b',
          // ⑥dataset값(Array)
          data: [8, 1, 9, 11, -2, -4],
          // ⑦dataset의 배경색(rgba값을 String으로 표현)
          backgroundColor: [
            //색상
            'rgba(54, 162, 235, 0.2)',
          ],
          // ⑧dataset의 선 색(rgba값을 String으로 표현)
          //borderColor: 'rgba(255, 99, 132, 1)',
          // ⑨dataset의 선 두께(Number)
          borderWidth: 1
        }
      ]
    },
    // ⑩차트의 설정(Object)
    options: {
      responsive: true,
      scales: {
        x: {
          stacked: true,
        },
        y: {
          stacked: true
        }
      },
      //미입력시 X축이 default
      indexAxis: 'y',
      plugins: {
        legend: {
          //미입력 시 top이 default
          position: 'bottom',
        },
        // 미입력시 검은색이 default
        datalabels: {
          color: '#FE777B'
        }
      }
    },
    plugins: [ChartDataLabels]
  });
  // onclick 이벤트 처리
  document.getElementById('test3').onclick = function(evt) {
    const points = testChart3.getElementsAtEventForMode(evt, 'nearest', { intersect: true }, true);

    if (points.length) {
      const firstPoint = points[0];
      const label = testChart3.data.labels[firstPoint.index];
      const value = testChart3.data.datasets[firstPoint.datasetIndex].data[firstPoint.index];

      //console.log(label);
      //console.log(value);
      alert(label);
    }
  };


  function addZero(i) {
    var rtn = i + 100;
    return rtn.toString().substr(1, 3);
  }

  var monthList = [];
  var monthData = [50,60,70,45,50,66];

  var dt = new Date();
  var year = dt.getFullYear();
  var mon = addZero(eval(dt.getMonth()+1));
  var now = year+mon;

  for(var i = (now - 5); i <= now; i++){
    var format =  i;
    monthList.push(format);
  }

  const ctx = document.getElementById('test4').getContext('2d');
  const test4 = new Chart(ctx, {
    type: 'line',
    data: {
      labels: monthList,
      datasets: [
        {
          // ⑤dataset의 이름(String)
          label: 'test3a',
          // ⑥dataset값(Array)
          data: [12, 19, 3, 5, 2, 3],
          // ⑦dataset의 배경색(rgba값을 String으로 표현)
          backgroundColor: [
            //색상
            'rgba(255, 99, 132, 0.5)',
          ],
          // ⑧dataset의 선 색(rgba값을 String으로 표현)
          borderColor: 'rgba(255, 99, 132, 1)',
          // ⑨dataset의 선 두께(Number)
          borderWidth: 1
        },
        {
          // ⑤dataset의 이름(String)
          label: 'test3b',
          // ⑥dataset값(Array)
          data: [8, 1, 9, 11, -2, -4],
          // ⑦dataset의 배경색(rgba값을 String으로 표현)
          backgroundColor: [
            //색상
            'rgba(54, 162, 235, 0.5)',
          ],
          // ⑧dataset의 선 색(rgba값을 String으로 표현)
          borderColor: 'rgba(54, 162, 235, 1)',
          // ⑨dataset의 선 두께(Number)
          borderWidth: 1
        }
      ]
    },

    options: {
      responsive: true,
      plugins: {
        legend: {
          display: false
        }
      }
    }
  });




  //tree
  var data = [
    {
      id:1,
      text: 'Parent 1',
      tags: ['1'],
      nodes: [
        {
          id: 2,
          text: 'Child 1',
          href: '#child1',
          tags: ['0'],
        }
      ]
    },
    {
      id:6,
      text: 'Parent 2',
      tags: ['0']
    },
  ];
  $(function() {

    var options = {
      bootstrap2: false,
      showTags: true,
      levels: 5,
      data: data,
      onNodeSelected: function(event, node) {
        alert( node.id );
      },
    };

    $('#treeview').treeview(options);
  });
  //tree end
</script>

</html>